server:
  port: 8071
spring:
  application:
    name: "configserver"
  profiles:
    # active: native # Use this to read from the local filesystem or classpath
    active: git # Use this to read from a Git repository (best practice)
  cloud:
    config:
      server:
        # native:
          # search-locations: "classpath:/config"
          # search-locations: "file:///C://Users//Gerardo//Documents//Web-Development//Java//config"
        git:
          uri: "https://github.com/thegera4/spring-cloud-server-config-example.git"
          default-label: main # branch name
          timeout: 5 # seconds
          clone-on-start: true # clone the repository on startup
          force-pull: true # force a pull on startup
  rabbitmq: # RabbitMQ configuration
    host: "localhost"
    port: 5672
    username: "guest"
    password: "guest"
encrypt: # Enable encryption
  key: "H/G3dLgzGKU9YzgmSkwISqIbTRAN1AAql7VQf2iE3Lw2PZFHOvgXubzB/wpZGGX3"
management:
  endpoints:
    web:
      exposure:
        include: "*" # Expose all endpoints (required for automatic refresh of properties at runtime)
  health: # Enable health checks
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint: # Enable the /actuator/health endpoint
    health:
      probes:
        enabled: true